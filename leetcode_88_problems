/*
Sizə azalmayan qaydada sıralanmış iki ədəd ədəd1 və ədəd2 tam ədəd massivi və müvafiq olaraq ədəd1 və ədəd2-dəki elementlərin sayını təmsil edən iki m və n tam ədədi verilir.

Nömrələr1 və nömrə2-ni azalmayan qaydada çeşidlənmiş bir massivdə birləşdirin.

Son çeşidlənmiş massiv funksiya tərəfindən qaytarılmamalı, bunun əvəzinə nums1 massivində saxlanılmalıdır. Bunu təmin etmək üçün nums1-in uzunluğu m + n-dir, burada ilk m element birləşdirilməli olan elementləri göstərir, sonuncu n element isə 0-a təyin edilir və nəzərə alınmamalıdır. nums2 n uzunluğuna malikdir.
*/



class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int m1 = m - 1;
        int n1 = n - 1;
        int nm = m + n - 1;

        while (m1 >= 0 && n1 >= 0) {
            if (nums1[m1] > nums2[n1]) {
                nums1[nm] = nums1[m1];
                m1--;
            } else {
                nums1[nm] = nums2[n1];
                n1--;
            }
            nm--;
        }
        while (n1 >= 0) {
            nums1[nm] = nums2[n1];
            n1--;
            nm--;
        }
    }
    int main() {
        int m;
        cin >> m;
        vector<int> nums1(m);
        for (int i = 0; i <= m; i++) {
            cin >> nums1[i];
        }
        int n;
        cin >> n;
        vector<int> nums2(n);
        for (int j = 0; j <= n; j++) {
            cin >> nums2[j];
        }
        merge(nums1, m, nums2, n);
        for (int num : nums1)
            cout << num << " ";
        cout << endl;
        return 0;
    }
};
